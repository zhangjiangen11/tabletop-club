# Tabletop Club Documentation Translation Template.
# Copyright (c) 2020-2025 Benjamin 'drwhut' Beddows.
# Copyright (c) 2021-2025 Tabletop Club contributors (see game/CREDITS.tres).
# This file is distributed under the same license as the Tabletop Club package.
# Benjamin 'drwhut' Beddows <drwhut@gmail.com>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tabletop Club master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-04 13:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../general/about.rst:5
msgid "About"
msgstr ""

#: ../../general/about.rst:8
msgid "What is Tabletop Club?"
msgstr ""

#: ../../general/about.rst:10
msgid "Tabletop Club is a free and open-source tabletop board game simulator! That's a bit of a mouthful, so I'll break that sentence down a bit:"
msgstr ""

#: ../../general/about.rst:14
msgid "Free"
msgstr ""

#: ../../general/about.rst:16
msgid "The game is completely free to download and play! You can do so by going to the :ref:`downloading-binaries` page."
msgstr ""

#: ../../general/about.rst:20
msgid "Open-source"
msgstr ""

#: ../../general/about.rst:22
msgid "This means a few things:"
msgstr ""

#: ../../general/about.rst:24
msgid "The source code of the game is visible to the public (you can see it in the `GitHub repository <https://github.com/drwhut/tabletop-club>`_). This also means you can compile the game youself from scratch (see :ref:`compiling-from-source`)."
msgstr ""

#: ../../general/about.rst:29
msgid "Anyone can contribute to the development of Tabletop Club in a number of different ways! For more information about how you can help contribute to the project, visit the :ref:`contributing` page."
msgstr ""

#: ../../general/about.rst:33
msgid "The game is licensed under the `MIT License <https://github.com/drwhut/tabletop-club/blob/master/LICENSE>`_, which is an open, permissive license."
msgstr ""

#: ../../general/about.rst:39
msgid "The game's code and project files are licensed under the MIT License, but some of the assets are licensed under different open licenses."
msgstr ""

#: ../../general/about.rst:42
msgid "To see the authors and licenses of these assets, you can check the ``game/LICENSES.tres`` file, as well as hovering over items in the objects menu in-game (which can also be found in the various ``.cfg`` files under ``assets/``)."
msgstr ""

#: ../../general/about.rst:48
msgid "Tabletop board game"
msgstr ""

#: ../../general/about.rst:50
msgid "The game is designed to allow you to play your favourite tabletop board games by effectively giving you a box of toys to play with (which include things like cards, dice, game pieces, and more), and it's up to you what you do with what you're given!"
msgstr ""

#: ../../general/about.rst:55
msgid "But the coolest thing about the game is that anyone can create assets for the game! It's as simple as dragging files into a folder and the game will import them, then you can use them straight away in-game! If you want to learn more about how to make assets for Tabletop Club, visit the :ref:`asset-packs` page."
msgstr ""

#: ../../general/about.rst:61
msgid "Simulator"
msgstr ""

#: ../../general/about.rst:63
msgid "Not only is the game a simulator of tabletop games, it also has a fully-simulated 3D physics engine! This means that objects in the game act like they do in real life, and it also means you can potentially send objects flying off the edge! Did I also mention you could flip the table?"
msgstr ""

#: ../../general/about.rst:70
msgid "Frequently Asked Questions"
msgstr ""

#: ../../general/about.rst:73
msgid "What platforms can I play Tabletop Club on?"
msgstr ""

#: ../../general/about.rst:75
msgid "Tabletop Club can be played on any of these platforms:"
msgstr ""

#: ../../general/about.rst:77
msgid "Windows 7 or later"
msgstr ""

#: ../../general/about.rst:78
msgid "macOS 10.12 or later"
msgstr ""

#: ../../general/about.rst:79
msgid "Linux / \\*BSD"
msgstr ""

#: ../../general/about.rst:81
msgid "Your hardware must also have support for OpenGL 3.3."
msgstr ""

#: ../../general/about.rst:83
msgid "It is recommended to have at least 1GB of available space on your drive to accommodate for the game files, as well as any generated files."
msgstr ""

#: ../../general/about.rst:86
msgid "Currently there are no plans for the game to be supported on mobile devices or consoles."
msgstr ""

#: ../../general/about.rst:91
msgid "Does Tabletop Club support multiplayer?"
msgstr ""

#: ../../general/about.rst:93
msgid "Yes! You don't need to make an account to play multiplayer, you can just host a game and start playing with friends!"
msgstr ""

#: ../../general/about.rst:98
msgid "You can change your name and colour in multiplayer by going to :guilabel:`Options` > :guilabel:`Multiplayer`, and changing the relevant settings."
msgstr ""

#: ../../general/about.rst:104
msgid "Is Tabletop Club on Steam / GOG / itch.io?"
msgstr ""

#: ../../general/about.rst:106
msgid "The game is available on `itch.io <https://drwhut.itch.io/tabletop-club>`_! Not only can you download the game as a standalone executable, you can also download it from the `itch app <https://itch.io/app>`_ and get automatic updates."
msgstr ""

#: ../../general/about.rst:113
msgid "What stage of development is Tabletop Club at?"
msgstr ""

#: ../../general/about.rst:115
msgid "Tabletop Club is currently in active development. The game has been released, but it is always being improved upon over time with help from the community. On GitHub there is `an issue tracker <https://github.com/drwhut/tabletop-club/issues>`_ for known bugs, feature requests, as well as quality-of-life tweaks to the game."
msgstr ""

#: ../../general/about.rst:123
msgid "Is there an official Discord or Matrix server that I can join?"
msgstr ""

#: ../../general/about.rst:125
msgid "Yes, you can join the official `Discord <https://discord.gg/GqYkGV4WwX>`_ and `Matrix <https://matrix.to/#/#tabletop-club:matrix.org>`_ servers to chat with other players about anything from the game itself, to board games in general, or even to share asset packs that you have made!"
msgstr ""

#: ../../general/about.rst:130
msgid "The goal is to create a safe, welcoming environment for everyone regardless of their background or personality. As long as you abide by the server rules, you are always free to come in and say hi!"
msgstr ""

#: ../../general/about.rst:136
msgid "What board games can I play in Tabletop Club?"
msgstr ""

#: ../../general/about.rst:138
msgid "Theoretically, any of them!"
msgstr ""

#: ../../general/about.rst:140
msgid "Out of the box, the games comes with the default Tabletop Club asset pack which contains some of the most common objects you'll need, like playing cards, dice, poker chips, etc."
msgstr ""

#: ../../general/about.rst:144
msgid "On GitHub, there is `an issue <https://github.com/drwhut/tabletop-club/issues/28>`_ listing which objects still need to be added to the default asset pack. If everything under a game is ticked, then you can play that game!"
msgstr ""

#: ../../general/about.rst:149
msgid "On the other hand, if the pieces you need aren't going to be included in the default asset pack, then you can either download an asset pack that someone else has already made, or you can create your own! Visit the :ref:`asset-packs` page if you're interested in making your own assets."
msgstr ""

#: ../../general/about.rst:156
msgid "How easy is it to setup a game in Tabletop Club?"
msgstr ""

#: ../../general/about.rst:158
msgid "For the most popular games, the default asset pack comes with pre-made save files that you can load instantly (when in-game, click :guilabel:`Games`, then click on the game you want to play, then click :guilabel:`Load`) to play the game right away!"
msgstr ""

#: ../../general/about.rst:163
msgid "If there isn't a pre-made save file for the game you want to play, you can easily make your own save by setting up the table the way you want to, then by going to the menu and clicking :guilabel:`Save file`. This way, if you want to play the game again, you can just load the save you made previously."
msgstr ""

#: ../../general/about.rst:168
msgid "See the :ref:`asset-type-game` page for more information about pre-made save files in asset packs."
msgstr ""

#: ../../general/about.rst:173
msgid "Can I add assets other than game pieces to Tabletop Club?"
msgstr ""

#: ../../general/about.rst:175
msgid "Yes! As well as objects, you can also import the following types of assets:"
msgstr ""

#: ../../general/about.rst:177
msgid ":ref:`asset-type-game`"
msgstr ""

#: ../../general/about.rst:178
msgid ":ref:`asset-type-music`"
msgstr ""

#: ../../general/about.rst:179
msgid ":ref:`asset-type-skybox`"
msgstr ""

#: ../../general/about.rst:180
msgid ":ref:`asset-type-sound`"
msgstr ""

#: ../../general/about.rst:181
msgid ":ref:`asset-type-table`"
msgstr ""

#: ../../general/about.rst:185
msgid "Can you add my favourite board game to Tabletop Club?"
msgstr ""

#: ../../general/about.rst:187
msgid "For legal safety, Tabletop Club will only ever distribute `public-domain <https://en.wikipedia.org/wiki/Public_domain>`_ board games in the default asset pack. But that doesn't stop you from making assets for your favourite board game for private use!"
msgstr ""

#: ../../general/about.rst:194
msgid "Can I share assets I've made on the internet?"
msgstr ""

#: ../../general/about.rst:196
msgid "It depends on a number of factors. In general, it should be safe to share the assets you've made for the game if the following is all true:"
msgstr ""

#: ../../general/about.rst:199
msgid "The assets you've made (textures, 3D models, etc.) are made by you, and are not derived from copyrighted material."
msgstr ""

#: ../../general/about.rst:204
msgid "You can distribute other people's creations **if** the license it's under allows you to. It's always safer to attribute the original author, and to state the license and whether the content was modified. Please read the terms of the license first."
msgstr ""

#: ../../general/about.rst:209
msgid "To help with this, the :ref:`config-cfg` file allows you to put the author, license, modifier, and URL with the asset, which is then shown in-game."
msgstr ""

#: ../../general/about.rst:212
msgid "If the assets you've made are for playing a game that already exists, then:"
msgstr ""

#: ../../general/about.rst:214
msgid "You cannot use the same name of the game without the owner's explicit permission."
msgstr ""

#: ../../general/about.rst:217
msgid "The mechanics of the game cannot be patented."
msgstr ""

#: ../../general/about.rst:221
msgid "You can `check online <https://worldwide.espacenet.com/advancedSearch>`_ to see if there are any patents for the game's mechanics."
msgstr ""

#: ../../general/about.rst:226
msgid "This is NOT legal advice. Please go ask the nearest lawyer for advice if you are worried about distributing your asset pack on the internet, as this also depends on your country's copyright laws."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:5
msgid "Coding guidelines"
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:7
msgid "When modifying the game's scenes and scripts, as well as following Godot's `GDScript style guide`_, make sure to follow these guidelines for consistency, and to make everyone's lives easier:"
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:11
msgid "Only use GDScript for scripting."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:13
msgid "When writing code, make sure your editor (whether it's Godot, or another external editor) is set to use tabs instead of spaces."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:16
msgid "When creating a new script, use the ``Copyright Notice`` template in ``game/Scripts/Templates/CopyrightNotice.gd``."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:19
msgid "Use typed variables, arguments, and return values where possible."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:21
msgid "When writing functions in scripts that aren't built in functions (e.g. ``_ready()``) or functions called by signals (e.g. ``_on_*``), then please add a comment above the function describing what the function does, what it's return value is (if any), and what the arguments are. For example:"
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:34
msgid "Make sure to fix any warnings Godot shows in scripts."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:36
msgid "If you are writing strings that will get displayed in the UI, remember to use the ``tr()`` function so the text can be translated."
msgstr ""

#: ../../general/contributing/coding_guidelines.rst:39
msgid "When creating new scenes, fill in the editor description for the root node explaining what the scene does. Also fill in the editor description for any nodes in the scene where it isn't obvious what they're there for."
msgstr ""

#: ../../general/contributing/index.rst:5
msgid "Contributing"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:5
msgid "Pull request workflow"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:7
msgid "If you want to help contribute to the project directly, by either fixing a bug or implementing a feature, then you'll need to create a **pull request** on the project's `GitHub repository`_. This page explains the steps needed to do exactly that!"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:14
msgid "Creating a fork"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:16
msgid "The way to think about forks is by thinking about going down a side road on a fork in the road - you'll be doing your own think on the side road (your \"fork\") while the main road (the repository's ``master`` branch) goes on. Eventually, the side road will join back in with the main road later on (the \"merge\")."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:22
msgid "To create a fork of the Tabletop Club repository on GitHub, you can go to the `GitHub repository`_ and click on the :guilabel:`Fork` button on the top-right. You should now have your own copy of the repository at that point in time. You can then clone the repository to your computer with ``git clone``."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:27
msgid "In this cloned repository, ``origin`` will point to your forked repository, which will not automatically update with the original repository. To make sure you can get updates from the original repository, you can add the original as a remote repository with this command:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:36
msgid "Now, if you ever need to update the ``master`` branch on your local repository, you can run the following commands:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:44
msgid "You can then update your fork on GitHub with these changes:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:52
msgid "Downloading and compiling Godot"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:54
msgid "Now that you have made a local copy of the fork on your computer, there's one more step that's needed to be able to play, edit, and test the game - you'll need to download and compile the modified version of Godot the game runs on. You can follow the instructions in :ref:`compiling-from-source` up until the section where you download the game (you already did that just!) to get Godot up and running."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:63
msgid "Making changes"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:65
msgid "Before you start making the changes you want to make, it is highly advised that you create a branch on the local repository for the bug/feature you're going to solve:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:74
msgid "Now you can start working on the code! See :ref:`coding-guidelines` for guidelines as to how you should write your code."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:79
msgid "When you are done, you should commit your changes and push them to your fork with these commands:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:90
#: ../../general/contributing/ways_to_contribute.rst:89
msgid "Creating a pull request"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:92
msgid "Once you've made the changes you wanted to make, and you've thoroughly tested them, you can push them to the custom branch on your forked repository and create a pull request!"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:96
msgid "To start, go to the original `GitHub repository`_ and click :guilabel:`Pull requests` > :guilabel:`New pull request`. Make sure you are merging from your fork's custom branch to ``drwhut/tabletop-club`` on the ``master`` branch. If GitHub is happy, then you can click :guilabel:`Create pull request`, and fill in the details for the pull request."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:104
msgid "If the pull request was to fix an issue, then please put the issue number in the pull request! For example, if the issue fixes issue number ``69``, then say in the pull request: ``This PR fixes #69``."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:108
msgid "Once you're done filling in the PR, you can submit it!"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:112
msgid "If we ask you to make changes to the pull request, you can do so by making the changes locally on your computer and pushing the commits to your fork's custom branch. These new commits will appear automatically in the PR."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:118
msgid "Resolving merge conflicts"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:120
msgid "There is a chance that GitHub will not let us merge the pull request into the ``master`` branch because of a merge conflict between the ``master`` branch and the branch on your fork. In this case, you should take the following steps:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:124
msgid "Update the fork's ``master`` branch so it is up-to-date with the original's:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:132
msgid "Merge the ``master`` branch on your local repository into your custom branch:"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:141
msgid "You can also use ``rebase`` here instead of ``merge``, but we don't mind whichever command you use. Use whichever one you're most comfortable with!"
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:145
msgid "At this point you'll get the same merge conflicts that stopped the pull request from being merged. You need to resolve them before continuing."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:148
msgid "Test that the changes you've made still work after the merge."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:150
msgid "Push the merge commit, plus any other commits you make, to your fork."
msgstr ""

#: ../../general/contributing/pull_request_workflow.rst:152
msgid "Go back to the pull request on GitHub, and ensure that there are no merge merge conflicts."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:3
msgid "Ways to contribute"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:6
msgid "Reporting a bug"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:8
msgid "Before reporting a bug on GitHub, make sure of the following:"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:10
msgid "The bug is reproducible. If you can't get the bug to happen again, then chances are that we won't be able to either, then we can't fix it!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:13
msgid "The bug hasn't already been reported - you can check by going to the `issues page`_ on GitHub and searching for it there."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:16
msgid "To report a bug, please `post an issue`_ on GitHub with the bug report template."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:20
msgid "If you come across multiple bugs, please post one issue for each bug! This way, we can easily reference individual bugs."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:23
msgid "Make sure to include as much information as you can in the post, including how to reproduce the bug, the platform you're running the game on, and if possible, provide the latest log so we can check if there were any errors thrown. You can find the game logs in the following folders:"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:28
msgid "Windows: ``%APPDATA%/Tabletop Club/logs/``"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:29
msgid "macOS: ``~/Library/Application Support/Tabletop Club/logs``"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:30
msgid "Linux: ``~/.local/share/Tabletop Club/logs/``"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:34
msgid "If you want to provide an in-game screenshot showing the bug, you can press :guilabel:`F3` to display debug information on the screen, then you can press :guilabel:`F12` to take a screenshot! Screenshots are saved to the Documents folder under ``TabletopClub/screenshots``."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:41
msgid "Suggesting a feature"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:43
msgid "Have you got an idea to make the game better? If someone else hasn't had the same idea (you can check by searching the `issues page`_ on GitHub), then you can `post an issue`_ on GitHub explaining your idea, what problem it solves, and any alternative ideas you've thought of. We want to make the game as good as it can possibly be, so don't hesistate to let us know your idea!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:51
msgid "Changing the documentation"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:53
msgid "If there is a part of the documentation that you don't understand, or that you think is missing, then please don't hesistate to suggest a change to the documentation:"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:57
msgid "You can `post an issue`_ with the documentation change template describing the edit you want."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:60
msgid "You can click on the GitHub icon at the top of the page, click the :guilabel:`suggest edit` button, and create a pull request with the changes you give!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:68
msgid "Translating the project"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:70
msgid "If you know a language other than English, you can help to translate the game and it's documentation by going to the project's `Hosted Weblate <https://hosted.weblate.org/engage/tabletop-club/>`_ page and suggest translations for the project's strings in your language!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:75
msgid "If you don't see your language in a component, you can add it by scrolling to the bottom of the component page and pressing :guilabel:`Start new translation`."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:80
msgid "Manual pull requests for translations will be closed, as Weblate keeps it's own fork of the project, and we want to avoid having merge conflicts occur."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:83
msgid "Translation status"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:91
msgid "If you see an issue on the `GitHub repository`_ that you think you can fix, and you want to directly contribute to the project by modifying the game code, you can create a pull request on GitHub to merge your changes in! See the :ref:`pull-request-workflow` page for more information."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:98
msgid "Proposing assets"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:100
msgid "If you see an issue on the `GitHub repository`_ that needs game assets to fix (like textures, 3D models, sound effects, music, etc.), then you can reply to that issue with either an asset you've found online, or one that you've made yourself!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:105
msgid "If the asset doesn't solve an issue, but you still think Tabletop Club would benefit from having it, then you can `post an issue`_ with the asset submission template instead!"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:109
msgid "However you propose the asset, you need to provide the following information:"
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:111
msgid "The name of the asset."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:112
msgid "The name of the author."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:113
msgid "The license the asset is under - keep in mind that we will only include assets with open licenses, e.g. `CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0/>`_."
msgstr ""

#: ../../general/contributing/ways_to_contribute.rst:116
msgid "The URL where the asset can be downloaded from. The URL must be publically accessible, and it must lead to a trusted website."
msgstr ""

#: ../../general/download/compiling_from_source.rst:5
msgid "Compiling from the source code"
msgstr ""

#: ../../general/download/compiling_from_source.rst:8
msgid "Downloading the Godot fork"
msgstr ""

#: ../../general/download/compiling_from_source.rst:10
msgid "The first step in compiling the game from scratch is to download and compile the game engine it runs on - `Godot <https://godotengine.org/>`_. Godot is a free and open-source 2D and 3D game engine, and it has all the functionality we need to make the game, except for one..."
msgstr ""

#: ../../general/download/compiling_from_source.rst:15
msgid "At this point, if you've used Godot in the past, you might be wondering \"wait, if it uses Godot, can't we just download Godot from the website and import the project?\". Not quite, because we've needed to add our own little bit of code on top of vanilla Godot, so to compile the game we need to download and compile `a modified version of Godot <https://github.com/drwhut/godot>`_. If you're interested as to why we've modified Godot, see :ref:`why-modify-godot`."
msgstr ""

#: ../../general/download/compiling_from_source.rst:22
msgid "To download the modified Godot, you'll need to have ``git`` installed on your computer (this will come in useful later as well). Then you can use this command in a terminal to download the fork of Godot:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:32
msgid "The text after ``-b`` refers to the branch of the fork that is downloaded. You may need to change the branch depending on which version of Tabletop Club you plan to compile:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:37
msgid "Tabletop Club Version"
msgstr ""

#: ../../general/download/compiling_from_source.rst:37
msgid "Godot Version"
msgstr ""

#: ../../general/download/compiling_from_source.rst:37
msgid "Git Branch"
msgstr ""

#: ../../general/download/compiling_from_source.rst:39
msgid "0.1.x"
msgstr ""

#: ../../general/download/compiling_from_source.rst:39
msgid "3.4.5"
msgstr ""

#: ../../general/download/compiling_from_source.rst:39
msgid "``tabletop-3.4.5``"
msgstr ""

#: ../../general/download/compiling_from_source.rst:41
msgid "0.2.x"
msgstr ""

#: ../../general/download/compiling_from_source.rst:41
msgid "3.5.3"
msgstr ""

#: ../../general/download/compiling_from_source.rst:41
msgid "``tabletop-3.5.3``"
msgstr ""

#: ../../general/download/compiling_from_source.rst:46
msgid "If you are struggling to compile Godot, or you simply don't want to, there are pre-built binaries of the Godot fork you can download from its `GitHub repository <https://github.com/drwhut/godot/releases>`_. Once it is running, you can then skip straight to :ref:`downloading-tabletop-club-source`."
msgstr ""

#: ../../general/download/compiling_from_source.rst:51
msgid "Please note that these builds are not officially supported, as they are artifacts from the fork's GitHub Actions rather than the official pipeline. Because of this, it is recommended to compile Godot from source instead if at all possible."
msgstr ""

#: ../../general/download/compiling_from_source.rst:58
msgid "Compiling Godot"
msgstr ""

#: ../../general/download/compiling_from_source.rst:60
msgid "The way you compile Godot's source code is exactly how you would normally compile Godot, the documentation of which can be found `here <https://docs.godotengine.org/en/stable/development/compiling/index.html>`_. For convenience, the instructions from the Godot documentation has been taken, modified slightly, and put here for each platform [#godot-doc-license]_."
msgstr ""

#: ../../general/download/compiling_from_source.rst:66
msgid "For all platforms, you will need *at least* the following:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:68
msgid "`Python 3.5+ <https://www.python.org/downloads/>`_. Make sure Python is added to your ``PATH`` environment variable."
msgstr ""

#: ../../general/download/compiling_from_source.rst:71
msgid "`SCons 3.0+ <https://www.scons.org/>`_."
msgstr ""

#: ../../general/download/compiling_from_source.rst:73
msgid "You can check to see whether you have installed Python and SCons correctly by running:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:83
msgid "Compiling Godot for Windows"
msgstr ""

#: ../../general/download/compiling_from_source.rst:86
#: ../../general/download/compiling_from_source.rst:147
#: ../../general/download/compiling_from_source.rst:213
msgid "Requirements"
msgstr ""

#: ../../general/download/compiling_from_source.rst:88
msgid "To compile Godot for Windows, you'll also need the following:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:90
msgid "`Visual Studio Community <https://visualstudio.microsoft.com/vs/community/>`_ version 2017 or later. You'll need to install it with C++ support - if you've already installed Visual Studio without C++ support, you can re-run the installer and click :guilabel:`Modify` to install the C++ tools."
msgstr ""

#: ../../general/download/compiling_from_source.rst:95
msgid "`MinGW-w64 <http://mingw-w64.org/doku.php>`_ with GCC can be used as an alternative to Visual Studio. You'll need to configure it to use the ``posix`` thread model."
msgstr ""

#: ../../general/download/compiling_from_source.rst:100
#: ../../general/download/compiling_from_source.rst:153
#: ../../general/download/compiling_from_source.rst:289
msgid "Compiling"
msgstr ""

#: ../../general/download/compiling_from_source.rst:102
msgid "To compile the engine, open a command prompt, change to the root directory of the engine code (using ``cd``), and run:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:111
#: ../../general/download/compiling_from_source.rst:300
msgid "The ``-j8`` means that SCons will use eight threads to compile Godot. To make compiling faster, it's best to have this number be the same as the number of logical cores in your CPU."
msgstr ""

#: ../../general/download/compiling_from_source.rst:115
msgid "If it compiles successfully, the result binary will be put in ``godot/bin/`` with the name ``godot.windows.opt.tools.32.exe`` or ``godot.windows.opt.tools.64.exe``. By default, SCons will build a binary matching your CPU architecture, but this can be changed by adding ``bits=64`` or ``bits=32`` to the above command."
msgstr ""

#: ../../general/download/compiling_from_source.rst:122
msgid "Creating a Visual Studio project"
msgstr ""

#: ../../general/download/compiling_from_source.rst:124
msgid "If you want to create a Visual Studio solution for compiling Godot instead (which can come in handy if you plan to modify the Godot source code), you can run SCons with the ``vsproj=yes`` parameter added:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:133
#: ../../general/download/compiling_from_source.rst:189
#: ../../general/download/compiling_from_source.rst:318
msgid "Building an export template"
msgstr ""

#: ../../general/download/compiling_from_source.rst:135
msgid "If you want to compile an export template to export a release build of the game from the editor, you can use the following comamnd:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:144
msgid "Compiling Godot for macOS"
msgstr ""

#: ../../general/download/compiling_from_source.rst:149
msgid "To compile Godot for macOS, you'll also need `Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_."
msgstr ""

#: ../../general/download/compiling_from_source.rst:155
msgid "Start a terminal and go to the root directory of the engine code."
msgstr ""

#: ../../general/download/compiling_from_source.rst:157
msgid "To compile for Intel (x86_64) CPUs, use:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:163
msgid "To compile for Apple Silicon (ARM64) CPUs, use:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:169
msgid "To support both architectures in a single \"Universal 2\" binary, run the above two commands, then use ``lipo`` to bundle them together:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:176
msgid "If it compiles successfully, the result binary will be put in ``godot/bin/``."
msgstr ""

#: ../../general/download/compiling_from_source.rst:178
msgid "To create an ``.app`` bundle like in the official builds, you need to use the template provided in ``misc/dist/osx_tools.app``:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:191
#: ../../general/download/compiling_from_source.rst:320
msgid "If you want to compile an export template to export a release build of the game from the editor, you can use the following commands:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:210
msgid "Compiling Godot for Linux / \\*BSD"
msgstr ""

#: ../../general/download/compiling_from_source.rst:215
msgid "To compile Godot for Linux and other Unix systems, you'll also need the following:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:218
msgid "GCC 7+ or Clang 6+."
msgstr ""

#: ../../general/download/compiling_from_source.rst:219
msgid "pkg-config."
msgstr ""

#: ../../general/download/compiling_from_source.rst:220
msgid "X11, Xcursor, Ximerama, Xi and XRandR development libraries."
msgstr ""

#: ../../general/download/compiling_from_source.rst:221
msgid "MesaGL development libraries."
msgstr ""

#: ../../general/download/compiling_from_source.rst:222
msgid "ALSA development libraries."
msgstr ""

#: ../../general/download/compiling_from_source.rst:223
msgid "PulseAudio development libraries."
msgstr ""

#: ../../general/download/compiling_from_source.rst:226
msgid "Distro-specific one-liners"
msgstr ""

#: ../../general/download/compiling_from_source.rst:229
msgid "**Alpine Linux**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:234
msgid "**Arch Linux**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:239
msgid "**Debian** / **Ubuntu**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:244
msgid "**Fedora**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:250
msgid "**FreeBSD**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:256
msgid "**Gentoo**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:261
msgid "**Mageia**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:267
msgid "**OpenBSD**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:271
msgid "**openSUSE**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:276
msgid "**NetBSD**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:280
msgid "For audio support, you can optionally install ``pulseaudio``."
msgstr ""

#: ../../general/download/compiling_from_source.rst:282
msgid "**Solus**"
msgstr ""

#: ../../general/download/compiling_from_source.rst:291
msgid "To compile the engine, open a terminal, change to the root directory of the engine code, and run:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:304
msgid "If it compiles successfully, the result binary will be put in ``godot/bin/`` with the name ``godot.x11.opt.tools.32`` or ``godot.x11.opt.tools.64``. By default, SCons will build a binary matching your CPU architecture, but this can be changed by adding ``bits=64`` or ``bits=32`` to the above command."
msgstr ""

#: ../../general/download/compiling_from_source.rst:311
msgid "If you want to compile using Clang instead of GCC, use this command:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:332
msgid "Downloading Tabletop Club"
msgstr ""

#: ../../general/download/compiling_from_source.rst:334
msgid "To download the Tabletop Club Godot project, you can either download a compressed copy of the source code for a particular version from the `releases <https://github.com/drwhut/tabletop-club/releases>`_ page on GitHub and extract it, or if you're feeling very adventurous, you can download the latest source code on the ``master`` branch by running this command:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:346
msgid "Downloading the WebRTC GDNative plugin"
msgstr ""

#: ../../general/download/compiling_from_source.rst:348
msgid "Since the multiplayer for Tabletop Club uses WebRTC, you'll need to download the WebRTC plugin for Godot. You can follow these instructions to setup the plugin:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:352
msgid "Download the latest release (not a pre-release!) of the plugin from `the repository <https://github.com/godotengine/webrtc-native/releases>`_. Make sure to download the ``webrtc-native-release`` file rather than the ``webrtc-native-debug`` file."
msgstr ""

#: ../../general/download/compiling_from_source.rst:357
msgid "Open the compressed file, and place the ``webrtc/`` folder into ``tabletop-club/game/``. Afterwards, there should be a file at ``tabletop-club/game/webrtc/webrtc.tres``."
msgstr ""

#: ../../general/download/compiling_from_source.rst:363
msgid "Running Tabletop Club in the Godot editor"
msgstr ""

#: ../../general/download/compiling_from_source.rst:365
msgid "To open Godot's project manager, run the executable you compiled in ``godot/bin/``. You can then import the project by clicking the :guilabel:`Import` button and selecting the ``tabletop-club/game/project.godot`` file. Now you can open the project and play the game by pressing the play button in the top-right corner (or by pressing F5)!"
msgstr ""

#: ../../general/download/compiling_from_source.rst:371
msgid "At this point, you can modify the game to your heart's content! Have a look at the scenes and scripts, try tweaking things here and there, or maybe try and add some stuff of your own?"
msgstr ""

#: ../../general/download/compiling_from_source.rst:377
msgid "Exporting the game"
msgstr ""

#: ../../general/download/compiling_from_source.rst:379
msgid "You can export the game with the editor to make it so you don't need to run the game through the editor to play it. Here's how you can export the project:"
msgstr ""

#: ../../general/download/compiling_from_source.rst:382
msgid "Click on :guilabel:`Project` > :guilabel:`Export...`"
msgstr ""

#: ../../general/download/compiling_from_source.rst:383
msgid "In the pop-up, click :guilabel:`Add...`, and select your platform."
msgstr ""

#: ../../general/download/compiling_from_source.rst:384
msgid "In the menu on the right, set the debug template to point to the editor executable, and if you made a release template, set that as well."
msgstr ""

#: ../../general/download/compiling_from_source.rst:389
msgid "If you are on macOS, then you will need to disable library validation as shown below. This is in order to prevent the system from checking the WebRTC library, which stops it from loading."
msgstr ""

#: ../../general/download/compiling_from_source.rst:396
msgid "Click :guilabel:`Export project`, choose where you want to export the project and whether you want to export a debug or a release binary, then click :guilabel:`Save`."
msgstr ""

#: ../../general/download/compiling_from_source.rst:399
msgid "Copy the ``tabletop-club/assets/`` folder next to the exported binary, so the game has assets to import."
msgstr ""

#: ../../general/download/compiling_from_source.rst:404
msgid "On macOS, you'll need to put this folder inside the ``.app`` package, specifically in ``Tabletop Club.app/Contents/Resources``."
msgstr ""

#: ../../general/download/compiling_from_source.rst:407
msgid "Now, you should be able to launch the exported executable and play the game directly!"
msgstr ""

#: ../../general/download/compiling_from_source.rst:414
msgid "Why did you fork Godot?"
msgstr ""

#: ../../general/download/compiling_from_source.rst:416
msgid "There's actually just one reason for this: there was a feature that I knew existed in Godot, but it was not exposed to the in-built scripting language GDScript, and the functionality wasn't included in release templates."
msgstr ""

#: ../../general/download/compiling_from_source.rst:420
msgid "When the game starts, the first thing it does is it scans certain folders for asset packs, and if it finds any, the game will then import assets from those packs. The way the game imports assets is almost identical to how Godot imports assets in the editor. It's possible because of `a custom module <https://github.com/drwhut/tabletop_club_godot_module>`_ I made that takes advantage of the importing code that already exists for the editor, and it allows me to import assets like textures and 3D models from anywhere on the filesystem using just one function in GDScript."
msgstr ""

#: ../../general/download/compiling_from_source.rst:429
msgid "However, a problem occured when compiling Godot with this module as a release template - the compiled editor code was not included in the release templates, so the custom module had no idea what \"importing\" meant. This meant I had to tweak some of the editor code and the SCons build script to include the importing code in release builds, while stopping compiler/runtime errors from happening since the code was suddenly disconnected from the rest of the editor."
msgstr ""

#: ../../general/download/compiling_from_source.rst:437
msgid "Footnotes"
msgstr ""

#: ../../general/download/compiling_from_source.rst:438
msgid "`The Godot documentation <https://docs.godotengine.org>`_ is from Juan Linietsky, Ariel Manzur and the Godot community, and it is licensed under the `CC-BY 3.0 License <https://creativecommons.org/licenses/by/3.0/>`_."
msgstr ""

#: ../../general/download/downloading_binaries.rst:5
msgid "Downloading the official binaries"
msgstr ""

#: ../../general/download/downloading_binaries.rst:7
msgid "There are multiple ways to download and play the game:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:11
msgid "From the itch app"
msgstr ""

#: ../../general/download/downloading_binaries.rst:13
msgid "This is the recommended way to download and play the game, since you'll get updates automatically whenever they are released, and you'll also get access to a huge range of amazing indie games from developers far more talented than I am!"
msgstr ""

#: ../../general/download/downloading_binaries.rst:17
msgid "You can download the itch app `here <https://itch.io/app>`_, and once you've logged in, search for \"Tabletop Club\" to download and install the game."
msgstr ""

#: ../../general/download/downloading_binaries.rst:22
msgid "From Flathub"
msgstr ""

#: ../../general/download/downloading_binaries.rst:24
msgid "If you are on a Linux distribution that supports Flatpaks, you can download the latest stable version of the game directly from your software manager! Simply search for \"Tabletop Club\" to download and install the game. Alternatively, you can visit the project page on `Flathub <https://flathub.org/apps/net.tabletopclub.TabletopClub>`_."
msgstr ""

#: ../../general/download/downloading_binaries.rst:30
msgid "If Flathub is not included in your list of Flatpak repositories, the game will not appear. You can add Flathub as a remote repository by following the instructions `on their website <https://flatpak.org/setup/>`_."
msgstr ""

#: ../../general/download/downloading_binaries.rst:34
msgid "You can also download the game via the command line instead once Flathub has been added as a remote repository:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:44
msgid "As a standalone executable"
msgstr ""

#: ../../general/download/downloading_binaries.rst:46
msgid "You can also download the game as a standalone application that you can run anywhere on your system from the following websites:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:49
msgid "`tabletopclub.net <https://tabletopclub.net/downloads>`_"
msgstr ""

#: ../../general/download/downloading_binaries.rst:50
msgid "`github.com <https://github.com/drwhut/tabletop-club/releases>`_"
msgstr ""

#: ../../general/download/downloading_binaries.rst:51
msgid "`itch.io <https://drwhut.itch.io/tabletop-club>`_"
msgstr ""

#: ../../general/download/downloading_binaries.rst:53
msgid "Once you have downloaded the game, there's only a couple of steps left in order to play it (see below)!"
msgstr ""

#: ../../general/download/downloading_binaries.rst:56
msgid "In most cases, you'll want to download the latest *stable* version of the game. While beta versions of the game have new features and are very helpful for player feedback, they are more suseptable to bugs. But if you're feeling a little experimental, go for the latest version!"
msgstr ""

#: ../../general/download/downloading_binaries.rst:61
msgid "If you've downloaded Tabletop Club in the past and want to download a newer version, follow :ref:`upgrading-installation` before carrying on here."
msgstr ""

#: ../../general/download/downloading_binaries.rst:66
msgid "Verifying the download"
msgstr ""

#: ../../general/download/downloading_binaries.rst:68
msgid "This step is completely optional, but it's a good idea to make sure that the downloaded file's contents are what we expect them to be. We do this by checking the `SHA512 hash <https://en.wikipedia.org/wiki/SHA-2>`_ of the file, and seeing if the hash matches the original."
msgstr ""

#: ../../general/download/downloading_binaries.rst:73
msgid "Download from the GitHub releases page the ``TabletopClub_vX.X.X_SHA512.txt`` file. This text file contains the SHA512 hashes of all of the downloads."
msgstr ""

#: ../../general/download/downloading_binaries.rst:76
msgid "Open a command prompt or terminal, and navigate to the folder where the compressed binary lies."
msgstr ""

#: ../../general/download/downloading_binaries.rst:79
msgid "Enter the command for your platform, adjusting the file name where necessary:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:92
msgid "Compare the output of the previous command to the corresponding line in the SHA512 text file. If the hashes do not match, then you will need to download the binary again."
msgstr ""

#: ../../general/download/downloading_binaries.rst:97
msgid "What happens now depends slightly on which platform you're on:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:100
msgid "Downloading for Windows"
msgstr ""

#: ../../general/download/downloading_binaries.rst:102
msgid "Make sure you have downloaded the compressed file, it should be called something like ``TabletopClub_vX.X.X_Windows_64.zip``."
msgstr ""

#: ../../general/download/downloading_binaries.rst:105
msgid "Right-click the downloaded file in File Explorer, and click :guilabel:`Extract all...`"
msgstr ""

#: ../../general/download/downloading_binaries.rst:108
msgid "There should be a pop-up asking where you want to extract the files to. You can put the game files anywhere you like, for example ``Desktop/TabletopClub``. You can then click :guilabel:`Extract` to extract the files to that location."
msgstr ""

#: ../../general/download/downloading_binaries.rst:113
msgid "**(Windows 11 Only)** Right-click the ``TabletopClub`` executable, and go to :guilabel:`Properties`. You will need to tick the :guilabel:`Unblock` checkbox at the bottom of the window in order to start the game."
msgstr ""

#: ../../general/download/downloading_binaries.rst:117
msgid "Go to the folder where you extracted the files, and double-click the ``TabletopClub.exe`` executable to start the game!"
msgstr ""

#: ../../general/download/downloading_binaries.rst:122
msgid "Currently Windows binaries of the game are not signed, so you'll most likely get a warning when you try to run the game saying that the publisher can't be trusted. You can get past this by clicking :guilabel:`More info`, then by clicking :guilabel:`Run anyway`."
msgstr ""

#: ../../general/download/downloading_binaries.rst:128
msgid "Downloading for macOS"
msgstr ""

#: ../../general/download/downloading_binaries.rst:130
msgid "Start downloading the compressed file, it should be called something like ``TabletopClub_vX.X.X_OSX_Universal.zip``."
msgstr ""

#: ../../general/download/downloading_binaries.rst:133
msgid "When it has downloaded, go to your downloads folder in Finder, and find the compressed file. Double-click the file to extract the application."
msgstr ""

#: ../../general/download/downloading_binaries.rst:136
msgid "Launch the game by right-clicking ``TabletopClub`` and clicking :guilabel:`Open`."
msgstr ""

#: ../../general/download/downloading_binaries.rst:141
msgid "Currently macOS binaries of the game are not signed, so you'll get a warning saying the publisher is unknown. You can get past this warning by clicking :guilabel:`Open` in the pop-up. This button won't appear if you double-click the application."
msgstr ""

#: ../../general/download/downloading_binaries.rst:147
msgid "Downloading for Linux / \\*BSD"
msgstr ""

#: ../../general/download/downloading_binaries.rst:149
msgid "Make sure you have downloaded the compressed file, it should be called something like ``TabletopClub_vX.X.X_Linux_64.zip``."
msgstr ""

#: ../../general/download/downloading_binaries.rst:152
msgid "Either use your distribution's archive manager to extract the files, or run this command in a terminal:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:159
msgid "Either double-click the executable, or go into a terminal and run this command in the folder the executable is in:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:170
msgid "Upgrading an existing installation"
msgstr ""

#: ../../general/download/downloading_binaries.rst:172
msgid "If you have already downloaded the game before, and you want to overwrite the files that are already there, then before downloading and extracting the new version of the game, first delete the following files and folders:"
msgstr ""

#: ../../general/download/downloading_binaries.rst:176
msgid "``TabletopClub.exe``, or ``TabletopClub.app``, or ``TabletopClub.x86_64``"
msgstr ""

#: ../../general/download/downloading_binaries.rst:177
msgid "``TabletopClub.pck``"
msgstr ""

#: ../../general/download/downloading_binaries.rst:178
msgid "``assets/TabletopClub``"
msgstr ""

#: ../../general/download/downloading_binaries.rst:180
msgid "Now you can extract the new version of the game as described above. If the operating systems asks you if you want to replace any files, say yes to all files."
msgstr ""

#: ../../general/download/index.rst:5
msgid "Download"
msgstr ""

#: ../../general/download/index.rst:7
msgid "There are two ways to download and play Tabletop Club:"
msgstr ""

#: ../../general/download/index.rst:9
msgid "By downloading the official binary for your platform and running the executable. This is by far the simplest method, and it is all that most players need to do."
msgstr ""

#: ../../general/download/index.rst:13
msgid "By downloading the source code from the game's repository and compiling it from scratch. This requires a few extra steps compared to running a pre-built binary, but you'll need to do this if you plan on contributing to the game code, or you could try it for fun!"
msgstr ""
